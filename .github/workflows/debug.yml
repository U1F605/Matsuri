name: Debug build

on:
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag'
        required: true

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.18
      - name: Native Build
        run: | 
          go install -v golang.org/x/mobile/cmd/gomobile@latest
          go install -v golang.org/x/mobile/cmd/gobind@latest
          gomobile init
          ./run lib core
          cd libcore/
          gomobile bind -v -trimpath -ldflags='-s -w' . || exit 1
          proj=../app/libs
          mkdir -p $proj
          cp -f libcore.aar $proj
          echo ">> install $(realpath $proj)/libcore.aar"
      - name: Debug build
        run: |
          ./run init action library
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: app:assembleOssDebug --refresh-dependencies
          cache-disabled: true
      - name: prepare
        run: |
          APK=$(find app/build/outputs/apk -name '*arm64-v8a-debug.apk')
          echo "APK=$APK" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: Matsuri-1.0.0-arm64-v8a-debug.apk
          path: ${{ env.APK }}
